/**
 * Motus: Counting-Pi
 * Pi Day 2021
 */
const canvasSize = 540;
const cx = canvasSize / 2;
const cy = canvasSize / 2 - 15;
const frequency = new Array(10).fill(0);
const ringSize = 46;
const pi = "31415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989";
let step = 0;


// Setup
function setup() {
  createCanvas(canvasSize, canvasSize);
}

// Draw tick
function draw() {
  background(0);

  // Ghost rings
  noFill();
  stroke(0, 57, 71);
  strokeWeight(21);
  for (let num = 0; num <= 9; num++) {
    ellipse(cx, cy, (num + 1) * ringSize);
  }

  // Draw rings
  for (let num = 0; num <= 9; num++) {
    const amount = frequency[num] / 100 * TWO_PI;

    // Arc colour
    stroke(0, 119, 146);
    if (amount >= TWO_PI) {
      stroke(181, 27, 5);
    }

    // Draw arc
    if (amount > 0) {
      arc(cx, cy, (num + 1) * ringSize, (num + 1) * ringSize, HALF_PI, amount + HALF_PI);
    }

    // Stop with winner
    if (amount >= TWO_PI) noLoop();
  }

  // Number labels
  for (let num = 0; num <= 9; num++) {
    noStroke();
    fill(199);
    textSize(16);
    textAlign(CENTER, CENTER);
    text(num, cx, (num + 1) * (ringSize / 2) + cy);
  }

  // Timer
  step++;
  frequency[pi[step]]++;

  // Pi
  textSize(22);
  textAlign(RIGHT);
  text(pi.substr(0, step), width - 20, height - 20);
}
